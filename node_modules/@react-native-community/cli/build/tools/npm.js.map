{"version":3,"names":["getNpmVersionIfAvailable","npmVersion","execSync","stdio","toString","trim","error","isProjectUsingNpm","cwd","findUp","sync","getNpmRegistryUrl","registryUrl","npmResolveConcreteVersion","packageName","tagOrVersion","url","URL","pathname","resp","fetch","indexOf","status","Error","json","version"],"sources":["../../src/tools/npm.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {execSync} from 'child_process';\nimport findUp from 'find-up';\n\nexport function getNpmVersionIfAvailable() {\n  let npmVersion;\n  try {\n    // execSync returns a Buffer -> convert to string\n    npmVersion = (\n      execSync('npm --version', {\n        stdio: [0, 'pipe', 'ignore'],\n      }).toString() || ''\n    ).trim();\n\n    return npmVersion;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport function isProjectUsingNpm(cwd: string) {\n  return findUp.sync('package-lock.json', {cwd});\n}\n\nexport const getNpmRegistryUrl = (() => {\n  // Lazily resolve npm registry url since it is only needed when initializing a\n  // new project.\n  let registryUrl = '';\n  return () => {\n    if (!registryUrl) {\n      try {\n        registryUrl = execSync(\n          'npm config get registry --workspaces=false --include-workspace-root',\n        )\n          .toString()\n          .trim();\n      } catch {\n        registryUrl = 'https://registry.npmjs.org/';\n      }\n    }\n    return registryUrl;\n  };\n})();\n\n/**\n * Convert an npm tag to a concrete version, for example:\n * - next -> 0.75.0-rc.0\n * - nightly -> 0.75.0-nightly-20240618-5df5ed1a8\n */\nexport async function npmResolveConcreteVersion(\n  packageName: string,\n  tagOrVersion: string,\n): Promise<string> {\n  const url = new URL(getNpmRegistryUrl());\n  url.pathname = `${packageName}/${tagOrVersion}`;\n  const resp = await fetch(url);\n  if (\n    [\n      200, // OK\n      301, // Moved Permanemently\n      302, // Found\n      304, // Not Modified\n      307, // Temporary Redirect\n      308, // Permanent Redirect\n    ].indexOf(resp.status) === -1\n  ) {\n    throw new Error(`Unknown version ${packageName}@${tagOrVersion}`);\n  }\n  const json: any = await resp.json();\n  return json.version;\n}\n"],"mappings":";;;;;;;;;AAQA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA6B;AAT7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAKO,SAASA,wBAAwB,GAAG;EACzC,IAAIC,UAAU;EACd,IAAI;IACF;IACAA,UAAU,GAAG,CACX,IAAAC,yBAAQ,EAAC,eAAe,EAAE;MACxBC,KAAK,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ;IAC7B,CAAC,CAAC,CAACC,QAAQ,EAAE,IAAI,EAAE,EACnBC,IAAI,EAAE;IAER,OAAOJ,UAAU;EACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF;AAEO,SAASC,iBAAiB,CAACC,GAAW,EAAE;EAC7C,OAAOC,iBAAM,CAACC,IAAI,CAAC,mBAAmB,EAAE;IAACF;EAAG,CAAC,CAAC;AAChD;AAEO,MAAMG,iBAAiB,GAAG,CAAC,MAAM;EACtC;EACA;EACA,IAAIC,WAAW,GAAG,EAAE;EACpB,OAAO,MAAM;IACX,IAAI,CAACA,WAAW,EAAE;MAChB,IAAI;QACFA,WAAW,GAAG,IAAAV,yBAAQ,EACpB,qEAAqE,CACtE,CACEE,QAAQ,EAAE,CACVC,IAAI,EAAE;MACX,CAAC,CAAC,MAAM;QACNO,WAAW,GAAG,6BAA6B;MAC7C;IACF;IACA,OAAOA,WAAW;EACpB,CAAC;AACH,CAAC,GAAG;;AAEJ;AACA;AACA;AACA;AACA;AAJA;AAKO,eAAeC,yBAAyB,CAC7CC,WAAmB,EACnBC,YAAoB,EACH;EACjB,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACN,iBAAiB,EAAE,CAAC;EACxCK,GAAG,CAACE,QAAQ,GAAI,GAAEJ,WAAY,IAAGC,YAAa,EAAC;EAC/C,MAAMI,IAAI,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;EAC7B,IACE,CACE,GAAG;EAAE;EACL,GAAG;EAAE;EACL,GAAG;EAAE;EACL,GAAG;EAAE;EACL,GAAG;EAAE;EACL,GAAG,CAAE;EAAA,CACN,CAACK,OAAO,CAACF,IAAI,CAACG,MAAM,CAAC,KAAK,CAAC,CAAC,EAC7B;IACA,MAAM,IAAIC,KAAK,CAAE,mBAAkBT,WAAY,IAAGC,YAAa,EAAC,CAAC;EACnE;EACA,MAAMS,IAAS,GAAG,MAAML,IAAI,CAACK,IAAI,EAAE;EACnC,OAAOA,IAAI,CAACC,OAAO;AACrB"}